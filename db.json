{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/aloha/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/aloha.css","path":"css/aloha.css","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/aloha.less","path":"css/aloha.less","modified":1,"renderable":1},{"_id":"themes/aloha/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/aloha/source/images/scrolltop.png","path":"images/scrolltop.png","modified":1,"renderable":1},{"_id":"themes/aloha/source/js/aloha-events.js","path":"js/aloha-events.js","modified":1,"renderable":1},{"_id":"themes/aloha/source/js/aloha.js","path":"js/aloha.js","modified":1,"renderable":1},{"_id":"themes/aloha/source/js/semantic-ui-algolia.js","path":"js/semantic-ui-algolia.js","modified":1,"renderable":1},{"_id":"themes/aloha/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.eot","path":"css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.eot","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff2","path":"css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff2","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/semantic.min.css","path":"css/semantic-ui/2.2.4/semantic.min.css","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.ttf","path":"css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.ttf","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff","path":"css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff","modified":1,"renderable":1},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.svg","path":"css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1505380764000},{"_id":"themes/aloha/.bowerrc","hash":"5d8502d31f0ed07e935bc6faf5e7f8ce8308ab75","modified":1505388533000},{"_id":"themes/aloha/.editorconfig","hash":"3b7ce764f2d4f18f5fbe1096561e2bb65032e034","modified":1505388533000},{"_id":"themes/aloha/.gitignore","hash":"6c706fc646a2e59060b1bee6a089dfb3c778764c","modified":1505388533000},{"_id":"themes/aloha/.travis.yml","hash":"78870628e0c372dd310c22a09fd05edba798f4c7","modified":1505388533000},{"_id":"themes/aloha/README.md","hash":"a19f1b0a53773223b5d3dc4272d7896c3775425a","modified":1505388533000},{"_id":"themes/aloha/_config.yml","hash":"3824d02cca3f2223611e73fdfdff50b0ff4c741d","modified":1505388533000},{"_id":"themes/aloha/bower.json","hash":"8233b2c8f90e453b2745ae7f3284ddf1f9b75a3d","modified":1505388533000},{"_id":"themes/aloha/gulpfile.js","hash":"bfaee2f68dfe2b9eb879a737cbc221e28f85c27f","modified":1505388533000},{"_id":"themes/aloha/package.json","hash":"8233b2c8f90e453b2745ae7f3284ddf1f9b75a3d","modified":1505388533000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1505439393000},{"_id":"source/_posts/WebRTC-编译以及运行IOS的Demo.md","hash":"58fc34231f36112f2199ad69e3ef4165d62ff5f0","modified":1505438753000},{"_id":"source/_posts/什么样代码是好的？对于编写代码，人们常常会出现哪些误区？.md","hash":"aa5f6251dd952084a1fd7c433a3b6aee348f1d23","modified":1505388932000},{"_id":"source/_posts/保证用户拿到的内容没有被篡改的验证方法.md","hash":"4fd1ecf3caed669a488b2dd7133e6ed08792acfb","modified":1505388958000},{"_id":"themes/aloha/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1505388533000},{"_id":"themes/aloha/.git/config","hash":"72466bed5572b9468fdc59b9f9c461df90b8c510","modified":1505388533000},{"_id":"themes/aloha/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1505388525000},{"_id":"themes/aloha/.git/index","hash":"74c70fc39012fcfc374f3482078390d2f9062d49","modified":1505388533000},{"_id":"themes/aloha/.git/packed-refs","hash":"13d34e08d584d0b13756139eca4a0acffb640c63","modified":1505388533000},{"_id":"themes/aloha/languages/en.yml","hash":"765e1052c4322c31088b2c7015718b1dcca2a5d7","modified":1505388533000},{"_id":"themes/aloha/languages/zh-CN.yml","hash":"9c6261721ca39721f0423aa487cfd5245e90bfdf","modified":1505388533000},{"_id":"themes/aloha/layout/archive.ejs","hash":"6913e223894986573c78c2a4a378d71d858784fe","modified":1505388533000},{"_id":"themes/aloha/layout/category.ejs","hash":"10739afe65298c0bb4b0946b02b5e1d38c4787ae","modified":1505388533000},{"_id":"themes/aloha/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1505388533000},{"_id":"themes/aloha/layout/layout.ejs","hash":"0b58c63e91f608fe8e2827ccc91eb000e8fd20b3","modified":1505388533000},{"_id":"themes/aloha/layout/page.ejs","hash":"f2070022e642c96b962c4e9e4425614e77809dc0","modified":1505388533000},{"_id":"themes/aloha/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1505388533000},{"_id":"themes/aloha/layout/tag.ejs","hash":"5caae7fe165eeb5e78880355e02e41f4b520db51","modified":1505388533000},{"_id":"themes/aloha/scripts/aloha-util.js","hash":"bc14e5337314eabaa88662897a134655adca004c","modified":1505388533000},{"_id":"themes/aloha/scripts/filter.js","hash":"efc79ce47f2bd3e49b61abbc71a3d6c9cd5413a5","modified":1505388533000},{"_id":"themes/aloha/scripts/helper.js","hash":"0803912708018c969630fe92f040deeb091b561a","modified":1505388533000},{"_id":"themes/aloha/source/favicon.ico","hash":"732a554507e50045577bb007d0e11eeb1b775b66","modified":1505388533000},{"_id":"themes/aloha/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1505388525000},{"_id":"themes/aloha/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1505388525000},{"_id":"themes/aloha/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1505388525000},{"_id":"themes/aloha/.git/logs/HEAD","hash":"8aee694be13dca5e7a32ac3815d19d617e879c07","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/archive-post.ejs","hash":"31afcbe64063ba274e02f0df5ff2f1eaf6a410d2","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/archive.ejs","hash":"a9792ed70d2bde56216682420d7e4f1a2a6b0a36","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/article.ejs","hash":"caf26cd0f21b827f54406244375b9ed83691d66c","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/footer.ejs","hash":"71ed42d099988a69ceae2f75404eb79031ff7be0","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/header.ejs","hash":"2c24409923cc04734730560d658e6b56d36204bf","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/js-params.ejs","hash":"77984c4bbf6c14a95a156ffd0d7302ac0b968af1","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/menu.ejs","hash":"6309fe92f6f72e0796934e5373e7c0e293af032a","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/pagination.ejs","hash":"71ace53e3e404212775d05f0ed991e02a79b6f1e","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/recent-posts.ejs","hash":"c4d6ad99fabe8a9821511e2c39861b268779d40e","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/search-modal.ejs","hash":"5f6bd05120b3df19024dd59da0be45031a00f6ca","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/sidebar-card.ejs","hash":"f9ba3f0f22a2717fec3e0bb7fa66a9237b4ad368","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/structured-data-markup.ejs","hash":"1d9579c8f3620faf08cdba9c134ea11c67180180","modified":1505388533000},{"_id":"themes/aloha/layout/_widget/disqus.ejs","hash":"543502ec45ac273e4681d8dc5c9140ee34d871ee","modified":1505388533000},{"_id":"themes/aloha/layout/_widget/duoshuo.ejs","hash":"91b3780f25cc94b8e4379c7ffbad3fded3b8c939","modified":1505388533000},{"_id":"themes/aloha/scripts/filter/after_post_render.js","hash":"17dfe245d8804f6ed109b78d43883e53fbead4ca","modified":1505388533000},{"_id":"themes/aloha/scripts/helper/toc.js","hash":"a898c9de0a099b4f720c6586ca89a0b7c826af0c","modified":1505388533000},{"_id":"themes/aloha/source/css/aloha.css","hash":"bec88f07f869e55381425b493d458ef8d3b11e82","modified":1505388533000},{"_id":"themes/aloha/source/css/aloha.less","hash":"39910135947134d51fd490af7fab5f85636d189d","modified":1505388533000},{"_id":"themes/aloha/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1505388533000},{"_id":"themes/aloha/source/images/scrolltop.png","hash":"97ae9aeea6178c2d73ced32aa7161743b1962998","modified":1505388533000},{"_id":"themes/aloha/source/js/aloha-events.js","hash":"2cd034c5bce6e1260bf7918ebfa1efa287694f6b","modified":1505388533000},{"_id":"themes/aloha/source/js/aloha.js","hash":"679001bf3666d0d32702308cfa77e3d714d2d2f6","modified":1505388533000},{"_id":"themes/aloha/source/js/semantic-ui-algolia.js","hash":"108379745038ae336bbcb11e53fc2733248632b0","modified":1505388533000},{"_id":"themes/aloha/.git/objects/pack/pack-b8e2c626451e6a4ef038d259722ab73a5393cce8.idx","hash":"1fb093d330c1f21dc60d107649163efe412e236c","modified":1505388533000},{"_id":"themes/aloha/.git/refs/heads/master","hash":"931877637a58ff090ff99de97c8282af6047e514","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/category.ejs","hash":"e04160c8de3cb3470aa659b22812fd466d78c234","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/date.ejs","hash":"c334b04c440fad46619fff14422b6e7b57cae7c7","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/gallery.ejs","hash":"0dbacc346e0250edcd814309056fb80ad5ae967f","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/nav.ejs","hash":"cf2aae1bf16c813c6a3a2d2f4271ef037a57d159","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/tag.ejs","hash":"0b16be115bb0bd548cdcbfb5ef0d0a9378b6d8be","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/post/title.ejs","hash":"48ac6bb0e6d8c0c14c2390952b35867539f08f69","modified":1505388533000},{"_id":"themes/aloha/source/css/_partial/highlight.less","hash":"b51526be9463a6a427267592c6a54066136cfe4d","modified":1505388533000},{"_id":"themes/aloha/source/css/_partial/main.less","hash":"14f5f0dbac5fbbc6f7cfdd7e423edb908ea1cc57","modified":1505388533000},{"_id":"themes/aloha/source/css/_partial/variables.less","hash":"09e4bcb52124928352b351769976e5fd157ed785","modified":1505388533000},{"_id":"themes/aloha/source/images/avatar.jpg","hash":"8f35072a67cc7de306601cf5a56e988207430620","modified":1505388533000},{"_id":"themes/aloha/.git/logs/refs/heads/master","hash":"8aee694be13dca5e7a32ac3815d19d617e879c07","modified":1505388533000},{"_id":"themes/aloha/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/theme/simple/post-description.ejs","hash":"a95c1cdc5f262736853174a13e4a5061d7e4a48e","modified":1505388533000},{"_id":"themes/aloha/layout/_partial/theme/simple/post_item.ejs","hash":"e023d17ae73276067bb6f96dabdef509a97fcdec","modified":1505388533000},{"_id":"themes/aloha/.git/logs/refs/remotes/origin/HEAD","hash":"8aee694be13dca5e7a32ac3815d19d617e879c07","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.eot","hash":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff2","hash":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/semantic.min.css","hash":"00d3a19960b111ae8e805afce3788ee0213aa363","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.ttf","hash":"9088143b19979779b2116cef38b661f72d982e19","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff","hash":"56ce13e71c2150d81bc972940584915181bd6081","modified":1505388533000},{"_id":"themes/aloha/source/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.svg","hash":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1505388533000},{"_id":"themes/aloha/.git/objects/pack/pack-b8e2c626451e6a4ef038d259722ab73a5393cce8.pack","hash":"98a11ded8aa9dbe9f1652b40c7298b2410ac49f9","modified":1505388533000},{"_id":"public/2017/08/28/保证用户拿到的内容没有被篡改的验证方法/index.html","hash":"32781576d2818d7a4aca007709721b521888da87","modified":1505439462942},{"_id":"public/archives/index.html","hash":"c375622110535b2735e3d7603ffbd80fb0def6b5","modified":1505439462947},{"_id":"public/archives/2017/index.html","hash":"b7b5912c14d12f8059bd7c0cfdab4869b6b88266","modified":1505439462948},{"_id":"public/archives/2017/08/index.html","hash":"876cc61d5639c8d7bf5e2c2975a474e8077e15fe","modified":1505439462948},{"_id":"public/archives/2017/09/index.html","hash":"6b80c1863dac21a91cb9527619331e81ce79384c","modified":1505439462948},{"_id":"public/2017/09/14/WebRTC-编译以及运行IOS的Demo/index.html","hash":"9149a3f924fae89438ecbcf809121225665f3176","modified":1505439462948},{"_id":"public/2017/08/28/什么样代码是好的？对于编写代码，人们常常会出现哪些误区？/index.html","hash":"e22cd76997b9880e94918c6feeb80a0be2f6bc6b","modified":1505439462948},{"_id":"public/index.html","hash":"c4ca40a2d167a7e50b4a270035bd082207bbcbe9","modified":1505439462949},{"_id":"public/css/aloha.less","hash":"39910135947134d51fd490af7fab5f85636d189d","modified":1505439462949},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1505439462949},{"_id":"public/images/scrolltop.png","hash":"97ae9aeea6178c2d73ced32aa7161743b1962998","modified":1505439462950},{"_id":"public/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.eot","hash":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1505439462950},{"_id":"public/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff2","hash":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1505439462950},{"_id":"public/favicon.ico","hash":"732a554507e50045577bb007d0e11eeb1b775b66","modified":1505439462954},{"_id":"public/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.ttf","hash":"9088143b19979779b2116cef38b661f72d982e19","modified":1505439462954},{"_id":"public/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.woff","hash":"56ce13e71c2150d81bc972940584915181bd6081","modified":1505439462959},{"_id":"public/css/aloha.css","hash":"bec88f07f869e55381425b493d458ef8d3b11e82","modified":1505439462964},{"_id":"public/js/semantic-ui-algolia.js","hash":"108379745038ae336bbcb11e53fc2733248632b0","modified":1505439462964},{"_id":"public/js/aloha-events.js","hash":"2cd034c5bce6e1260bf7918ebfa1efa287694f6b","modified":1505439462964},{"_id":"public/js/aloha.js","hash":"679001bf3666d0d32702308cfa77e3d714d2d2f6","modified":1505439462965},{"_id":"public/css/semantic-ui/2.2.4/semantic.min.css","hash":"00d3a19960b111ae8e805afce3788ee0213aa363","modified":1505439462966},{"_id":"public/images/avatar.jpg","hash":"8f35072a67cc7de306601cf5a56e988207430620","modified":1505439462971},{"_id":"public/css/semantic-ui/2.2.4/themes/default/assets/fonts/icons.svg","hash":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1505439462973}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"WebRTC-编译以及运行IOS的Demo","_content":"注：本篇文章的前提是，你已经下载好官方8G多的源代码，如还没有得到代码，请参照其他攻略先下载好代码。此外需说明下，我的系统环境为Mac OSX 10.11.4\n\n（1）下载安装ninja（如已安装，则可跳过这一步）：\n因为Xcode是不能直接编译webRTC的代码的，必须使用ninja。\n- 获得并编译ninja的代码\n```\n$ git clone git://github.com/martine/ninja.git\n$ cd ninja/\n$ ./bootstrap.py\n```\n- 上述步骤会在当前目录下产生一个ninja的可运行文件。使用以下命令把它复制到/usrlocal/bin下\n```\n$ sudo cp ninja /usr/local/bin/\n$ sudo chmod a+rx /usr/local/bin/ninja\n```\n\n（2）配置需要的编译的目标环境\n- cd 至下载好的源代码的src目录下，其实就是主目录就这一个大文件夹。\n- 配置命令，以下命令根据demo的需要情况，只选其中一种执行，根据不同的情况，最后输出的demo也不一样。\n  - 32位真机\n```\nexport GYP_DEFINES=\"OS=ios target_arch=arm\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_ios\"\n```\n  - 64位真机\n```\nexport GYP_DEFINES=\"OS=ios target_arch=arm64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_ios64\"\n```\n  - 32位模拟器\n```\nexport GYP_DEFINES=\"OS=ios target_arch=ia32\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_sim\"\n```\n - 64位模拟器\n```\nexport GYP_DEFINES=\"OS=ios target_arch=x64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_sim\"\n```\n  - OSX\n```\nexport GYP_DEFINES=\"OS=mac target_arch=x64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_mac\"\n```\n- 执行完上面的配置命令后 执行脚本\n```\nwebrtc/build/gyp_webrtc.py\n```\n\n（3）编译运行demo\n- 这里有两种方式，第一种，使用ninja命令直接编译运行，第二种，生成xcode工程，在xcode里运行，但实际上并不是xcode编译的，而实际上还是运行了第一种的命令脚本。只不过使用xcode可以看见一些源代码，比较清晰些\n\n- 直接编译运行\n```\nninja -C out_ios/Debug-iphoneos AppRTCDemo\nninja -C out_ios/Release-iphoneos AppRTCDemo\nninja -C out_sim/Debug-iphonesimulator AppRTCDemo\n```\n\n- 生成xcode编译运行\n  - 还是配置一下环境\n```\nexport GYP_GENERATOR_FLAGS=\"xcode_project_version=3.2 xcode_ninja_target_pattern=All_iOS xcode_ninja_executable_target_pattern=AppRTCDemo|libjingle_peerconnection_unittest|libjingle_peerconnection_objc_test output_dir=out_ios\"\nexport GYP_GENERATORS=\"ninja,xcode-ninja\"\n```\n - 还是要再执行一下上面那个脚本\n```\nwebrtc/build/gyp_webrtc.py\n```\n - 执行完后再src目录下就是生成一个all.ninja.xcworkspace工程，打开后会根据你在之前配置的情况生成不同的target，后面就可以command+R运行就好了，上面配置的是真机的话也是可以的。\n\n（4）测试demo\n- 在真机装一个demo（因为真机有摄像头）\n- 用谷歌或火狐浏览器打开\n  https://apprtc.appspot.com/  需要翻墙\n- 两边同时进入同一个房间号即可连接。","source":"_posts/WebRTC-编译以及运行IOS的Demo.md","raw":"---\ntitle: WebRTC-编译以及运行IOS的Demo\n---\n注：本篇文章的前提是，你已经下载好官方8G多的源代码，如还没有得到代码，请参照其他攻略先下载好代码。此外需说明下，我的系统环境为Mac OSX 10.11.4\n\n（1）下载安装ninja（如已安装，则可跳过这一步）：\n因为Xcode是不能直接编译webRTC的代码的，必须使用ninja。\n- 获得并编译ninja的代码\n```\n$ git clone git://github.com/martine/ninja.git\n$ cd ninja/\n$ ./bootstrap.py\n```\n- 上述步骤会在当前目录下产生一个ninja的可运行文件。使用以下命令把它复制到/usrlocal/bin下\n```\n$ sudo cp ninja /usr/local/bin/\n$ sudo chmod a+rx /usr/local/bin/ninja\n```\n\n（2）配置需要的编译的目标环境\n- cd 至下载好的源代码的src目录下，其实就是主目录就这一个大文件夹。\n- 配置命令，以下命令根据demo的需要情况，只选其中一种执行，根据不同的情况，最后输出的demo也不一样。\n  - 32位真机\n```\nexport GYP_DEFINES=\"OS=ios target_arch=arm\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_ios\"\n```\n  - 64位真机\n```\nexport GYP_DEFINES=\"OS=ios target_arch=arm64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_ios64\"\n```\n  - 32位模拟器\n```\nexport GYP_DEFINES=\"OS=ios target_arch=ia32\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_sim\"\n```\n - 64位模拟器\n```\nexport GYP_DEFINES=\"OS=ios target_arch=x64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_sim\"\n```\n  - OSX\n```\nexport GYP_DEFINES=\"OS=mac target_arch=x64\"\nexport GYP_GENERATOR_FLAGS=\"output_dir=out_mac\"\n```\n- 执行完上面的配置命令后 执行脚本\n```\nwebrtc/build/gyp_webrtc.py\n```\n\n（3）编译运行demo\n- 这里有两种方式，第一种，使用ninja命令直接编译运行，第二种，生成xcode工程，在xcode里运行，但实际上并不是xcode编译的，而实际上还是运行了第一种的命令脚本。只不过使用xcode可以看见一些源代码，比较清晰些\n\n- 直接编译运行\n```\nninja -C out_ios/Debug-iphoneos AppRTCDemo\nninja -C out_ios/Release-iphoneos AppRTCDemo\nninja -C out_sim/Debug-iphonesimulator AppRTCDemo\n```\n\n- 生成xcode编译运行\n  - 还是配置一下环境\n```\nexport GYP_GENERATOR_FLAGS=\"xcode_project_version=3.2 xcode_ninja_target_pattern=All_iOS xcode_ninja_executable_target_pattern=AppRTCDemo|libjingle_peerconnection_unittest|libjingle_peerconnection_objc_test output_dir=out_ios\"\nexport GYP_GENERATORS=\"ninja,xcode-ninja\"\n```\n - 还是要再执行一下上面那个脚本\n```\nwebrtc/build/gyp_webrtc.py\n```\n - 执行完后再src目录下就是生成一个all.ninja.xcworkspace工程，打开后会根据你在之前配置的情况生成不同的target，后面就可以command+R运行就好了，上面配置的是真机的话也是可以的。\n\n（4）测试demo\n- 在真机装一个demo（因为真机有摄像头）\n- 用谷歌或火狐浏览器打开\n  https://apprtc.appspot.com/  需要翻墙\n- 两边同时进入同一个房间号即可连接。","slug":"WebRTC-编译以及运行IOS的Demo","published":1,"date":"2017-09-14T09:07:39.000Z","updated":"2017-09-15T01:25:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7l7sbhn0000mdodf382zatr","content":"<p>&#x6CE8;&#xFF1A;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x524D;&#x63D0;&#x662F;&#xFF0C;&#x4F60;&#x5DF2;&#x7ECF;&#x4E0B;&#x8F7D;&#x597D;&#x5B98;&#x65B9;8G&#x591A;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x8FD8;&#x6CA1;&#x6709;&#x5F97;&#x5230;&#x4EE3;&#x7801;&#xFF0C;&#x8BF7;&#x53C2;&#x7167;&#x5176;&#x4ED6;&#x653B;&#x7565;&#x5148;&#x4E0B;&#x8F7D;&#x597D;&#x4EE3;&#x7801;&#x3002;&#x6B64;&#x5916;&#x9700;&#x8BF4;&#x660E;&#x4E0B;&#xFF0C;&#x6211;&#x7684;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x4E3A;Mac OSX 10.11.4</p>\n<p>&#xFF08;1&#xFF09;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;ninja&#xFF08;&#x5982;&#x5DF2;&#x5B89;&#x88C5;&#xFF0C;&#x5219;&#x53EF;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E00;&#x6B65;&#xFF09;&#xFF1A;<br>&#x56E0;&#x4E3A;Xcode&#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7F16;&#x8BD1;webRTC&#x7684;&#x4EE3;&#x7801;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;ninja&#x3002;</p>\n<ul class=\"ui list\">\n<li><p>&#x83B7;&#x5F97;&#x5E76;&#x7F16;&#x8BD1;ninja&#x7684;&#x4EE3;&#x7801;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://github.com/martine/ninja.git</div><div class=\"line\">$ cd ninja/</div><div class=\"line\">$ ./bootstrap.py</div></pre></td></tr></table></figure>\n</li>\n<li><p>&#x4E0A;&#x8FF0;&#x6B65;&#x9AA4;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;ninja&#x7684;&#x53EF;&#x8FD0;&#x884C;&#x6587;&#x4EF6;&#x3002;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x628A;&#x5B83;&#x590D;&#x5236;&#x5230;/usrlocal/bin&#x4E0B;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo cp ninja /usr/local/bin/</div><div class=\"line\">$ sudo chmod a+rx /usr/local/bin/ninja</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>&#xFF08;2&#xFF09;&#x914D;&#x7F6E;&#x9700;&#x8981;&#x7684;&#x7F16;&#x8BD1;&#x7684;&#x76EE;&#x6807;&#x73AF;&#x5883;</p>\n<ul class=\"ui list\">\n<li>cd &#x81F3;&#x4E0B;&#x8F7D;&#x597D;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x7684;src&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E3B;&#x76EE;&#x5F55;&#x5C31;&#x8FD9;&#x4E00;&#x4E2A;&#x5927;&#x6587;&#x4EF6;&#x5939;&#x3002;</li>\n<li><p>&#x914D;&#x7F6E;&#x547D;&#x4EE4;&#xFF0C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6839;&#x636E;demo&#x7684;&#x9700;&#x8981;&#x60C5;&#x51B5;&#xFF0C;&#x53EA;&#x9009;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x6267;&#x884C;&#xFF0C;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6700;&#x540E;&#x8F93;&#x51FA;&#x7684;demo&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#x3002;</p>\n<ul>\n<li><p>32&#x4F4D;&#x771F;&#x673A;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=arm&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_ios&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>64&#x4F4D;&#x771F;&#x673A;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=arm64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_ios64&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>32&#x4F4D;&#x6A21;&#x62DF;&#x5668;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=ia32&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_sim&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>64&#x4F4D;&#x6A21;&#x62DF;&#x5668;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=x64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_sim&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>OSX</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=mac target_arch=x64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_mac&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>&#x6267;&#x884C;&#x5B8C;&#x4E0A;&#x9762;&#x7684;&#x914D;&#x7F6E;&#x547D;&#x4EE4;&#x540E; &#x6267;&#x884C;&#x811A;&#x672C;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">webrtc/build/gyp_webrtc.py</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>&#xFF08;3&#xFF09;&#x7F16;&#x8BD1;&#x8FD0;&#x884C;demo</p>\n<ul class=\"ui list\">\n<li><p>&#x8FD9;&#x91CC;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x7B2C;&#x4E00;&#x79CD;&#xFF0C;&#x4F7F;&#x7528;ninja&#x547D;&#x4EE4;&#x76F4;&#x63A5;&#x7F16;&#x8BD1;&#x8FD0;&#x884C;&#xFF0C;&#x7B2C;&#x4E8C;&#x79CD;&#xFF0C;&#x751F;&#x6210;xcode&#x5DE5;&#x7A0B;&#xFF0C;&#x5728;xcode&#x91CC;&#x8FD0;&#x884C;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x5E76;&#x4E0D;&#x662F;xcode&#x7F16;&#x8BD1;&#x7684;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x8FD8;&#x662F;&#x8FD0;&#x884C;&#x4E86;&#x7B2C;&#x4E00;&#x79CD;&#x7684;&#x547D;&#x4EE4;&#x811A;&#x672C;&#x3002;&#x53EA;&#x4E0D;&#x8FC7;&#x4F7F;&#x7528;xcode&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x4E00;&#x4E9B;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x6BD4;&#x8F83;&#x6E05;&#x6670;&#x4E9B;</p>\n</li>\n<li><p>&#x76F4;&#x63A5;&#x7F16;&#x8BD1;&#x8FD0;&#x884C;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ninja -C out_ios/Debug-iphoneos AppRTCDemo</div><div class=\"line\">ninja -C out_ios/Release-iphoneos AppRTCDemo</div><div class=\"line\">ninja -C out_sim/Debug-iphonesimulator AppRTCDemo</div></pre></td></tr></table></figure>\n</li>\n<li><p>&#x751F;&#x6210;xcode&#x7F16;&#x8BD1;&#x8FD0;&#x884C;</p>\n<ul>\n<li><p>&#x8FD8;&#x662F;&#x914D;&#x7F6E;&#x4E00;&#x4E0B;&#x73AF;&#x5883;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;xcode_project_version=3.2 xcode_ninja_target_pattern=All_iOS xcode_ninja_executable_target_pattern=AppRTCDemo|libjingle_peerconnection_unittest|libjingle_peerconnection_objc_test output_dir=out_ios&quot;</div><div class=\"line\">export GYP_GENERATORS=&quot;ninja,xcode-ninja&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>&#x8FD8;&#x662F;&#x8981;&#x518D;&#x6267;&#x884C;&#x4E00;&#x4E0B;&#x4E0A;&#x9762;&#x90A3;&#x4E2A;&#x811A;&#x672C;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">webrtc/build/gyp_webrtc.py</div></pre></td></tr></table></figure>\n</li>\n<li><p>&#x6267;&#x884C;&#x5B8C;&#x540E;&#x518D;src&#x76EE;&#x5F55;&#x4E0B;&#x5C31;&#x662F;&#x751F;&#x6210;&#x4E00;&#x4E2A;all.ninja.xcworkspace&#x5DE5;&#x7A0B;&#xFF0C;&#x6253;&#x5F00;&#x540E;&#x4F1A;&#x6839;&#x636E;&#x4F60;&#x5728;&#x4E4B;&#x524D;&#x914D;&#x7F6E;&#x7684;&#x60C5;&#x51B5;&#x751F;&#x6210;&#x4E0D;&#x540C;&#x7684;target&#xFF0C;&#x540E;&#x9762;&#x5C31;&#x53EF;&#x4EE5;command+R&#x8FD0;&#x884C;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x4E0A;&#x9762;&#x914D;&#x7F6E;&#x7684;&#x662F;&#x771F;&#x673A;&#x7684;&#x8BDD;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#x3002;</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>&#xFF08;4&#xFF09;&#x6D4B;&#x8BD5;demo</p>\n<ul class=\"ui list\">\n<li>&#x5728;&#x771F;&#x673A;&#x88C5;&#x4E00;&#x4E2A;demo&#xFF08;&#x56E0;&#x4E3A;&#x771F;&#x673A;&#x6709;&#x6444;&#x50CF;&#x5934;&#xFF09;</li>\n<li>&#x7528;&#x8C37;&#x6B4C;&#x6216;&#x706B;&#x72D0;&#x6D4F;&#x89C8;&#x5668;&#x6253;&#x5F00;<br><a href=\"https://apprtc.appspot.com/\" target=\"_blank\" rel=\"external\">https://apprtc.appspot.com/</a>  &#x9700;&#x8981;&#x7FFB;&#x5899;</li>\n<li>&#x4E24;&#x8FB9;&#x540C;&#x65F6;&#x8FDB;&#x5165;&#x540C;&#x4E00;&#x4E2A;&#x623F;&#x95F4;&#x53F7;&#x5373;&#x53EF;&#x8FDE;&#x63A5;&#x3002;</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>注：本篇文章的前提是，你已经下载好官方8G多的源代码，如还没有得到代码，请参照其他攻略先下载好代码。此外需说明下，我的系统环境为Mac OSX 10.11.4</p>\n<p>（1）下载安装ninja（如已安装，则可跳过这一步）：<br>因为Xcode是不能直接编译webRTC的代码的，必须使用ninja。</p>\n<ul>\n<li><p>获得并编译ninja的代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://github.com/martine/ninja.git</div><div class=\"line\">$ cd ninja/</div><div class=\"line\">$ ./bootstrap.py</div></pre></td></tr></table></figure>\n</li>\n<li><p>上述步骤会在当前目录下产生一个ninja的可运行文件。使用以下命令把它复制到/usrlocal/bin下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo cp ninja /usr/local/bin/</div><div class=\"line\">$ sudo chmod a+rx /usr/local/bin/ninja</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（2）配置需要的编译的目标环境</p>\n<ul>\n<li>cd 至下载好的源代码的src目录下，其实就是主目录就这一个大文件夹。</li>\n<li><p>配置命令，以下命令根据demo的需要情况，只选其中一种执行，根据不同的情况，最后输出的demo也不一样。</p>\n<ul>\n<li><p>32位真机</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=arm&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_ios&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>64位真机</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=arm64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_ios64&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>32位模拟器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=ia32&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_sim&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>64位模拟器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=ios target_arch=x64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_sim&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>OSX</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_DEFINES=&quot;OS=mac target_arch=x64&quot;</div><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;output_dir=out_mac&quot;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>执行完上面的配置命令后 执行脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">webrtc/build/gyp_webrtc.py</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（3）编译运行demo</p>\n<ul>\n<li><p>这里有两种方式，第一种，使用ninja命令直接编译运行，第二种，生成xcode工程，在xcode里运行，但实际上并不是xcode编译的，而实际上还是运行了第一种的命令脚本。只不过使用xcode可以看见一些源代码，比较清晰些</p>\n</li>\n<li><p>直接编译运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ninja -C out_ios/Debug-iphoneos AppRTCDemo</div><div class=\"line\">ninja -C out_ios/Release-iphoneos AppRTCDemo</div><div class=\"line\">ninja -C out_sim/Debug-iphonesimulator AppRTCDemo</div></pre></td></tr></table></figure>\n</li>\n<li><p>生成xcode编译运行</p>\n<ul>\n<li><p>还是配置一下环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export GYP_GENERATOR_FLAGS=&quot;xcode_project_version=3.2 xcode_ninja_target_pattern=All_iOS xcode_ninja_executable_target_pattern=AppRTCDemo|libjingle_peerconnection_unittest|libjingle_peerconnection_objc_test output_dir=out_ios&quot;</div><div class=\"line\">export GYP_GENERATORS=&quot;ninja,xcode-ninja&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>还是要再执行一下上面那个脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">webrtc/build/gyp_webrtc.py</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行完后再src目录下就是生成一个all.ninja.xcworkspace工程，打开后会根据你在之前配置的情况生成不同的target，后面就可以command+R运行就好了，上面配置的是真机的话也是可以的。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>（4）测试demo</p>\n<ul>\n<li>在真机装一个demo（因为真机有摄像头）</li>\n<li>用谷歌或火狐浏览器打开<br><a href=\"https://apprtc.appspot.com/\" target=\"_blank\" rel=\"external\">https://apprtc.appspot.com/</a>  需要翻墙</li>\n<li>两边同时进入同一个房间号即可连接。</li>\n</ul>\n"},{"title":"什么样代码是好的？对于编写代码，人们常常会出现哪些误区？","_content":"##### 什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\n\n- 代码是更多时间是用来维护的，其次才是实现功能的\n\n- 好的代码是可以进行良好的自我描述的，并不需要太多的注释，为了代码更好的维护，在无法写出一目了然的代码的时候，必要的注释是不能少的。切勿不能代码逻辑既复杂，还没有相应的注释或者文档说明。\n\n- 所有的设计模型和理论都只是手段，其实唯一的目标是在尽量提高（可维护性，可复用性=可测试性）等等的条件下实现业务需求。切不可形而上学，走教条主义，一味的追求固话的设计模式从而使得代码复杂难以理解和测试。\n\n  ##### 那么如何写出好的代码？\n\n  - code review  重点不是机器可以检查出来的代码错误或者一些细微的编写习惯，重点是代码的设计思路和模块的划分方法，对于实际情况中，小团队的集体重构是一个很好的选择\n  - 代码重构\n  - 阅读优秀的开源代码，或者组内优秀同学写出的代码，阅读自己身边人的代码好处是可以问问他们为什么这样写，为什么那样写，进步会很快。\n  - 最后是使用一些静态代码检查的工具进行代码检查。\n\n  ##### 常用的代码整洁技巧：\n\n  - 任何一个东西（class method var）都应该明确的负责某个单一概念的事情。\n  - 在编写一个功能点之前，对其实现方式进行一个大体的设计（如果是强数据相关的话，在脑海中把数据流串起来，必要的时候可以使用状态机的概念跟踪APP的变化），然后再完成细节实现代码。\n  - 类，方法，变量，名称的设计，函数和方法参数的设计，目的是尽量靠近让人一目了然的效果\n  - 对于任何的方法和类，无论是UI相关还是网络相关还是逻辑相关或者是数据处理相关，都必须准确的找到一个类的归属，并且这个归属是师出有名的。这就需要一个良好的概念定义和设计，（具体就是指，这些事情怎么分块，放在哪，之间怎么依赖）\n  - 对复杂继承的使用保持慎独的态度，如果套东西使用复杂继承关系并不是必要的，那么尽量不要使用。","source":"_posts/什么样代码是好的？对于编写代码，人们常常会出现哪些误区？.md","raw":"---\ntitle: 什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\n---\n##### 什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\n\n- 代码是更多时间是用来维护的，其次才是实现功能的\n\n- 好的代码是可以进行良好的自我描述的，并不需要太多的注释，为了代码更好的维护，在无法写出一目了然的代码的时候，必要的注释是不能少的。切勿不能代码逻辑既复杂，还没有相应的注释或者文档说明。\n\n- 所有的设计模型和理论都只是手段，其实唯一的目标是在尽量提高（可维护性，可复用性=可测试性）等等的条件下实现业务需求。切不可形而上学，走教条主义，一味的追求固话的设计模式从而使得代码复杂难以理解和测试。\n\n  ##### 那么如何写出好的代码？\n\n  - code review  重点不是机器可以检查出来的代码错误或者一些细微的编写习惯，重点是代码的设计思路和模块的划分方法，对于实际情况中，小团队的集体重构是一个很好的选择\n  - 代码重构\n  - 阅读优秀的开源代码，或者组内优秀同学写出的代码，阅读自己身边人的代码好处是可以问问他们为什么这样写，为什么那样写，进步会很快。\n  - 最后是使用一些静态代码检查的工具进行代码检查。\n\n  ##### 常用的代码整洁技巧：\n\n  - 任何一个东西（class method var）都应该明确的负责某个单一概念的事情。\n  - 在编写一个功能点之前，对其实现方式进行一个大体的设计（如果是强数据相关的话，在脑海中把数据流串起来，必要的时候可以使用状态机的概念跟踪APP的变化），然后再完成细节实现代码。\n  - 类，方法，变量，名称的设计，函数和方法参数的设计，目的是尽量靠近让人一目了然的效果\n  - 对于任何的方法和类，无论是UI相关还是网络相关还是逻辑相关或者是数据处理相关，都必须准确的找到一个类的归属，并且这个归属是师出有名的。这就需要一个良好的概念定义和设计，（具体就是指，这些事情怎么分块，放在哪，之间怎么依赖）\n  - 对复杂继承的使用保持慎独的态度，如果套东西使用复杂继承关系并不是必要的，那么尽量不要使用。","slug":"什么样代码是好的？对于编写代码，人们常常会出现哪些误区？","published":1,"date":"2017-08-28T11:10:39.000Z","updated":"2017-09-14T11:35:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7l7sbhs0001mdod38isbzvk","content":"<h5 id=\"&#x4EC0;&#x4E48;&#x6837;&#x4EE3;&#x7801;&#x662F;&#x597D;&#x7684;&#xFF1F;&#x5BF9;&#x4E8E;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4EBA;&#x4EEC;&#x5E38;&#x5E38;&#x4F1A;&#x51FA;&#x73B0;&#x54EA;&#x4E9B;&#x8BEF;&#x533A;&#xFF1F;\"><a href=\"#&#x4EC0;&#x4E48;&#x6837;&#x4EE3;&#x7801;&#x662F;&#x597D;&#x7684;&#xFF1F;&#x5BF9;&#x4E8E;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4EBA;&#x4EEC;&#x5E38;&#x5E38;&#x4F1A;&#x51FA;&#x73B0;&#x54EA;&#x4E9B;&#x8BEF;&#x533A;&#xFF1F;\" class=\"headerlink\" title=\"&#x4EC0;&#x4E48;&#x6837;&#x4EE3;&#x7801;&#x662F;&#x597D;&#x7684;&#xFF1F;&#x5BF9;&#x4E8E;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4EBA;&#x4EEC;&#x5E38;&#x5E38;&#x4F1A;&#x51FA;&#x73B0;&#x54EA;&#x4E9B;&#x8BEF;&#x533A;&#xFF1F;\"></a>&#x4EC0;&#x4E48;&#x6837;&#x4EE3;&#x7801;&#x662F;&#x597D;&#x7684;&#xFF1F;&#x5BF9;&#x4E8E;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4EBA;&#x4EEC;&#x5E38;&#x5E38;&#x4F1A;&#x51FA;&#x73B0;&#x54EA;&#x4E9B;&#x8BEF;&#x533A;&#xFF1F;</h5><ul class=\"ui list\">\n<li><p>&#x4EE3;&#x7801;&#x662F;&#x66F4;&#x591A;&#x65F6;&#x95F4;&#x662F;&#x7528;&#x6765;&#x7EF4;&#x62A4;&#x7684;&#xFF0C;&#x5176;&#x6B21;&#x624D;&#x662F;&#x5B9E;&#x73B0;&#x529F;&#x80FD;&#x7684;</p>\n</li>\n<li><p>&#x597D;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x826F;&#x597D;&#x7684;&#x81EA;&#x6211;&#x63CF;&#x8FF0;&#x7684;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x592A;&#x591A;&#x7684;&#x6CE8;&#x91CA;&#xFF0C;&#x4E3A;&#x4E86;&#x4EE3;&#x7801;&#x66F4;&#x597D;&#x7684;&#x7EF4;&#x62A4;&#xFF0C;&#x5728;&#x65E0;&#x6CD5;&#x5199;&#x51FA;&#x4E00;&#x76EE;&#x4E86;&#x7136;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x8981;&#x7684;&#x6CE8;&#x91CA;&#x662F;&#x4E0D;&#x80FD;&#x5C11;&#x7684;&#x3002;&#x5207;&#x52FF;&#x4E0D;&#x80FD;&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x65E2;&#x590D;&#x6742;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x6CE8;&#x91CA;&#x6216;&#x8005;&#x6587;&#x6863;&#x8BF4;&#x660E;&#x3002;</p>\n</li>\n<li><p>&#x6240;&#x6709;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x578B;&#x548C;&#x7406;&#x8BBA;&#x90FD;&#x53EA;&#x662F;&#x624B;&#x6BB5;&#xFF0C;&#x5176;&#x5B9E;&#x552F;&#x4E00;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5728;&#x5C3D;&#x91CF;&#x63D0;&#x9AD8;&#xFF08;&#x53EF;&#x7EF4;&#x62A4;&#x6027;&#xFF0C;&#x53EF;&#x590D;&#x7528;&#x6027;=&#x53EF;&#x6D4B;&#x8BD5;&#x6027;&#xFF09;&#x7B49;&#x7B49;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#x5B9E;&#x73B0;&#x4E1A;&#x52A1;&#x9700;&#x6C42;&#x3002;&#x5207;&#x4E0D;&#x53EF;&#x5F62;&#x800C;&#x4E0A;&#x5B66;&#xFF0C;&#x8D70;&#x6559;&#x6761;&#x4E3B;&#x4E49;&#xFF0C;&#x4E00;&#x5473;&#x7684;&#x8FFD;&#x6C42;&#x56FA;&#x8BDD;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x590D;&#x6742;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#x548C;&#x6D4B;&#x8BD5;&#x3002;</p>\n<h5 id=\"&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5199;&#x51FA;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1F;\"><a href=\"#&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5199;&#x51FA;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1F;\" class=\"headerlink\" title=\"&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5199;&#x51FA;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1F;\"></a>&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5199;&#x51FA;&#x597D;&#x7684;&#x4EE3;&#x7801;&#xFF1F;</h5><ul>\n<li>code review  &#x91CD;&#x70B9;&#x4E0D;&#x662F;&#x673A;&#x5668;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x51FA;&#x6765;&#x7684;&#x4EE3;&#x7801;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x4E00;&#x4E9B;&#x7EC6;&#x5FAE;&#x7684;&#x7F16;&#x5199;&#x4E60;&#x60EF;&#xFF0C;&#x91CD;&#x70B9;&#x662F;&#x4EE3;&#x7801;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x8DEF;&#x548C;&#x6A21;&#x5757;&#x7684;&#x5212;&#x5206;&#x65B9;&#x6CD5;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x4E2D;&#xFF0C;&#x5C0F;&#x56E2;&#x961F;&#x7684;&#x96C6;&#x4F53;&#x91CD;&#x6784;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x9009;&#x62E9;</li>\n<li>&#x4EE3;&#x7801;&#x91CD;&#x6784;</li>\n<li>&#x9605;&#x8BFB;&#x4F18;&#x79C0;&#x7684;&#x5F00;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x6216;&#x8005;&#x7EC4;&#x5185;&#x4F18;&#x79C0;&#x540C;&#x5B66;&#x5199;&#x51FA;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x9605;&#x8BFB;&#x81EA;&#x5DF1;&#x8EAB;&#x8FB9;&#x4EBA;&#x7684;&#x4EE3;&#x7801;&#x597D;&#x5904;&#x662F;&#x53EF;&#x4EE5;&#x95EE;&#x95EE;&#x4ED6;&#x4EEC;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x6837;&#x5199;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x90A3;&#x6837;&#x5199;&#xFF0C;&#x8FDB;&#x6B65;&#x4F1A;&#x5F88;&#x5FEB;&#x3002;</li>\n<li>&#x6700;&#x540E;&#x662F;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x68C0;&#x67E5;&#x7684;&#x5DE5;&#x5177;&#x8FDB;&#x884C;&#x4EE3;&#x7801;&#x68C0;&#x67E5;&#x3002;</li>\n</ul>\n<h5 id=\"&#x5E38;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x6280;&#x5DE7;&#xFF1A;\"><a href=\"#&#x5E38;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x6280;&#x5DE7;&#xFF1A;\" class=\"headerlink\" title=\"&#x5E38;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x6280;&#x5DE7;&#xFF1A;\"></a>&#x5E38;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x6280;&#x5DE7;&#xFF1A;</h5><ul>\n<li>&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#xFF08;class method var&#xFF09;&#x90FD;&#x5E94;&#x8BE5;&#x660E;&#x786E;&#x7684;&#x8D1F;&#x8D23;&#x67D0;&#x4E2A;&#x5355;&#x4E00;&#x6982;&#x5FF5;&#x7684;&#x4E8B;&#x60C5;&#x3002;</li>\n<li>&#x5728;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x70B9;&#x4E4B;&#x524D;&#xFF0C;&#x5BF9;&#x5176;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x5927;&#x4F53;&#x7684;&#x8BBE;&#x8BA1;&#xFF08;&#x5982;&#x679C;&#x662F;&#x5F3A;&#x6570;&#x636E;&#x76F8;&#x5173;&#x7684;&#x8BDD;&#xFF0C;&#x5728;&#x8111;&#x6D77;&#x4E2D;&#x628A;&#x6570;&#x636E;&#x6D41;&#x4E32;&#x8D77;&#x6765;&#xFF0C;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x72B6;&#x6001;&#x673A;&#x7684;&#x6982;&#x5FF5;&#x8DDF;&#x8E2A;APP&#x7684;&#x53D8;&#x5316;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5B8C;&#x6210;&#x7EC6;&#x8282;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x3002;</li>\n<li>&#x7C7B;&#xFF0C;&#x65B9;&#x6CD5;&#xFF0C;&#x53D8;&#x91CF;&#xFF0C;&#x540D;&#x79F0;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x51FD;&#x6570;&#x548C;&#x65B9;&#x6CD5;&#x53C2;&#x6570;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x5C3D;&#x91CF;&#x9760;&#x8FD1;&#x8BA9;&#x4EBA;&#x4E00;&#x76EE;&#x4E86;&#x7136;&#x7684;&#x6548;&#x679C;</li>\n<li>&#x5BF9;&#x4E8E;&#x4EFB;&#x4F55;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x7C7B;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;UI&#x76F8;&#x5173;&#x8FD8;&#x662F;&#x7F51;&#x7EDC;&#x76F8;&#x5173;&#x8FD8;&#x662F;&#x903B;&#x8F91;&#x76F8;&#x5173;&#x6216;&#x8005;&#x662F;&#x6570;&#x636E;&#x5904;&#x7406;&#x76F8;&#x5173;&#xFF0C;&#x90FD;&#x5FC5;&#x987B;&#x51C6;&#x786E;&#x7684;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5F52;&#x5C5E;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x5F52;&#x5C5E;&#x662F;&#x5E08;&#x51FA;&#x6709;&#x540D;&#x7684;&#x3002;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x826F;&#x597D;&#x7684;&#x6982;&#x5FF5;&#x5B9A;&#x4E49;&#x548C;&#x8BBE;&#x8BA1;&#xFF0C;&#xFF08;&#x5177;&#x4F53;&#x5C31;&#x662F;&#x6307;&#xFF0C;&#x8FD9;&#x4E9B;&#x4E8B;&#x60C5;&#x600E;&#x4E48;&#x5206;&#x5757;&#xFF0C;&#x653E;&#x5728;&#x54EA;&#xFF0C;&#x4E4B;&#x95F4;&#x600E;&#x4E48;&#x4F9D;&#x8D56;&#xFF09;</li>\n<li>&#x5BF9;&#x590D;&#x6742;&#x7EE7;&#x627F;&#x7684;&#x4F7F;&#x7528;&#x4FDD;&#x6301;&#x614E;&#x72EC;&#x7684;&#x6001;&#x5EA6;&#xFF0C;&#x5982;&#x679C;&#x5957;&#x4E1C;&#x897F;&#x4F7F;&#x7528;&#x590D;&#x6742;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x5E76;&#x4E0D;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x3002;</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\"><a href=\"#什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\" class=\"headerlink\" title=\"什么样代码是好的？对于编写代码，人们常常会出现哪些误区？\"></a>什么样代码是好的？对于编写代码，人们常常会出现哪些误区？</h5><ul>\n<li><p>代码是更多时间是用来维护的，其次才是实现功能的</p>\n</li>\n<li><p>好的代码是可以进行良好的自我描述的，并不需要太多的注释，为了代码更好的维护，在无法写出一目了然的代码的时候，必要的注释是不能少的。切勿不能代码逻辑既复杂，还没有相应的注释或者文档说明。</p>\n</li>\n<li><p>所有的设计模型和理论都只是手段，其实唯一的目标是在尽量提高（可维护性，可复用性=可测试性）等等的条件下实现业务需求。切不可形而上学，走教条主义，一味的追求固话的设计模式从而使得代码复杂难以理解和测试。</p>\n<h5 id=\"那么如何写出好的代码？\"><a href=\"#那么如何写出好的代码？\" class=\"headerlink\" title=\"那么如何写出好的代码？\"></a>那么如何写出好的代码？</h5><ul>\n<li>code review  重点不是机器可以检查出来的代码错误或者一些细微的编写习惯，重点是代码的设计思路和模块的划分方法，对于实际情况中，小团队的集体重构是一个很好的选择</li>\n<li>代码重构</li>\n<li>阅读优秀的开源代码，或者组内优秀同学写出的代码，阅读自己身边人的代码好处是可以问问他们为什么这样写，为什么那样写，进步会很快。</li>\n<li>最后是使用一些静态代码检查的工具进行代码检查。</li>\n</ul>\n<h5 id=\"常用的代码整洁技巧：\"><a href=\"#常用的代码整洁技巧：\" class=\"headerlink\" title=\"常用的代码整洁技巧：\"></a>常用的代码整洁技巧：</h5><ul>\n<li>任何一个东西（class method var）都应该明确的负责某个单一概念的事情。</li>\n<li>在编写一个功能点之前，对其实现方式进行一个大体的设计（如果是强数据相关的话，在脑海中把数据流串起来，必要的时候可以使用状态机的概念跟踪APP的变化），然后再完成细节实现代码。</li>\n<li>类，方法，变量，名称的设计，函数和方法参数的设计，目的是尽量靠近让人一目了然的效果</li>\n<li>对于任何的方法和类，无论是UI相关还是网络相关还是逻辑相关或者是数据处理相关，都必须准确的找到一个类的归属，并且这个归属是师出有名的。这就需要一个良好的概念定义和设计，（具体就是指，这些事情怎么分块，放在哪，之间怎么依赖）</li>\n<li>对复杂继承的使用保持慎独的态度，如果套东西使用复杂继承关系并不是必要的，那么尽量不要使用。</li>\n</ul>\n</li>\n</ul>\n"},{"title":"保证用户拿到的内容没有被篡改的验证方法","_content":"用户拿到的内容没有被篡改的验证：\n\n1.服务器生成公私钥\n\n2.服务器公布公钥\n\n3.服务器对即将发布的数据进行MD5，使用私钥对MD5后生成的字符串进行加密，生成的东西称之为签名\n\n4.服务器把这个签名和本来要发的数据一起发给用户\n\n5.用户收到所有数据后，用公钥解密签名，得到MD5字符串，\n\n6.用户再对原始数据进行MD5，然后两个MD5字符串比对以验证原始数据在发送的过程中是否有没有被篡改过","source":"_posts/保证用户拿到的内容没有被篡改的验证方法.md","raw":"---\ntitle: 保证用户拿到的内容没有被篡改的验证方法\n---\n用户拿到的内容没有被篡改的验证：\n\n1.服务器生成公私钥\n\n2.服务器公布公钥\n\n3.服务器对即将发布的数据进行MD5，使用私钥对MD5后生成的字符串进行加密，生成的东西称之为签名\n\n4.服务器把这个签名和本来要发的数据一起发给用户\n\n5.用户收到所有数据后，用公钥解密签名，得到MD5字符串，\n\n6.用户再对原始数据进行MD5，然后两个MD5字符串比对以验证原始数据在发送的过程中是否有没有被篡改过","slug":"保证用户拿到的内容没有被篡改的验证方法","published":1,"date":"2017-08-28T11:10:39.000Z","updated":"2017-09-14T11:35:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7l7sbhv0002mdod37lou56v","content":"<p>&#x7528;&#x6237;&#x62FF;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x6CA1;&#x6709;&#x88AB;&#x7BE1;&#x6539;&#x7684;&#x9A8C;&#x8BC1;&#xFF1A;</p>\n<p>1.&#x670D;&#x52A1;&#x5668;&#x751F;&#x6210;&#x516C;&#x79C1;&#x94A5;</p>\n<p>2.&#x670D;&#x52A1;&#x5668;&#x516C;&#x5E03;&#x516C;&#x94A5;</p>\n<p>3.&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x5373;&#x5C06;&#x53D1;&#x5E03;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;MD5&#xFF0C;&#x4F7F;&#x7528;&#x79C1;&#x94A5;&#x5BF9;MD5&#x540E;&#x751F;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x4E1C;&#x897F;&#x79F0;&#x4E4B;&#x4E3A;&#x7B7E;&#x540D;</p>\n<p>4.&#x670D;&#x52A1;&#x5668;&#x628A;&#x8FD9;&#x4E2A;&#x7B7E;&#x540D;&#x548C;&#x672C;&#x6765;&#x8981;&#x53D1;&#x7684;&#x6570;&#x636E;&#x4E00;&#x8D77;&#x53D1;&#x7ED9;&#x7528;&#x6237;</p>\n<p>5.&#x7528;&#x6237;&#x6536;&#x5230;&#x6240;&#x6709;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x7528;&#x516C;&#x94A5;&#x89E3;&#x5BC6;&#x7B7E;&#x540D;&#xFF0C;&#x5F97;&#x5230;MD5&#x5B57;&#x7B26;&#x4E32;&#xFF0C;</p>\n<p>6.&#x7528;&#x6237;&#x518D;&#x5BF9;&#x539F;&#x59CB;&#x6570;&#x636E;&#x8FDB;&#x884C;MD5&#xFF0C;&#x7136;&#x540E;&#x4E24;&#x4E2A;MD5&#x5B57;&#x7B26;&#x4E32;&#x6BD4;&#x5BF9;&#x4EE5;&#x9A8C;&#x8BC1;&#x539F;&#x59CB;&#x6570;&#x636E;&#x5728;&#x53D1;&#x9001;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x662F;&#x5426;&#x6709;&#x6CA1;&#x6709;&#x88AB;&#x7BE1;&#x6539;&#x8FC7;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>用户拿到的内容没有被篡改的验证：</p>\n<p>1.服务器生成公私钥</p>\n<p>2.服务器公布公钥</p>\n<p>3.服务器对即将发布的数据进行MD5，使用私钥对MD5后生成的字符串进行加密，生成的东西称之为签名</p>\n<p>4.服务器把这个签名和本来要发的数据一起发给用户</p>\n<p>5.用户收到所有数据后，用公钥解密签名，得到MD5字符串，</p>\n<p>6.用户再对原始数据进行MD5，然后两个MD5字符串比对以验证原始数据在发送的过程中是否有没有被篡改过</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}